pj[3] <- sum(genoi==2,na.rm=T)#/lengC
impute.samples <- which(is.na(genoi)) + 2
genoChr1[i,impute.samples] <- sample(c(0,1,2),size=length(impute.samples),replace=T,prob=pj)
for(i in 2:nrow(genoChr1)) {
gj1 <- array(0,dim=c(3))
genoi1 <- genoChr1[i-1,-c(1:2)]
#lengC <- sum(!is.na(genoi1))
gj1[1] <- sum(genoi1==0,na.rm=T)#/lengC
gj1[2] <- sum(genoi1==1,na.rm=T)#/lengC
gj1[3] <- sum(genoi1==2,na.rm=T)#/lengC
pj <- array(0,dim=c(3,3))
genoi <- genoChr1[i,-c(1:2)]
#lenP <- sum(!is.na(genoi1) & !is.na(genoi))
pj[1,1] <- sum(genoi1==0 & genoi==0,na.rm=T)#/lenP
pj[1,2] <- sum(genoi1==0 & genoi==1,na.rm=T)#/lenP
pj[1,3] <- sum(genoi1==0 & genoi==2,na.rm=T)#/lenP
pj[2,1] <- sum(genoi1==1 & genoi==0,na.rm=T)#/lenP
pj[2,2] <- sum(genoi1==1 & genoi==1,na.rm=T)#/lenP
pj[2,3] <- sum(genoi1==1 & genoi==2,na.rm=T)#/lenP
pj[3,1] <- sum(genoi1==2 & genoi==0,na.rm=T)#/lenP
pj[3,2] <- sum(genoi1==2 & genoi==1,na.rm=T)#/lenP
pj[3,3] <- sum(genoi1==2 & genoi==2,na.rm=T)#/lenP
impute.samples <- which(is.na(genoi)) + 2
prob.pg <- gj1%*%pj
if(sum(prob.pg)) {genoChr1[i,impute.samples] <- sample(c(0,1,2),size=length(impute.samples),replace=T,prob=prob.pg)}
}
row_filtered <- apply(genoChr1[,3:ncol(genoChr1)],c(1,2),is.na)
row_filtered <- apply(row_filtered,1,sum)
genoChr1 <- genoChr1[!row_filtered,]
dim(genoChr1)
gj1
pj
gj1%*%pj
50*45+9*7+2*0
50*45+9*7+2*2
calc_EHHS.pos <- function(pos,geno,thresh=0.1) {
#geno[geno==2] <- 0		## 0=homozygous; 1=heterozygous
M <- nrow(geno)
#EHH <- matrix(NA, ncol=M, nrow=M)
EHH <- rep(NA,M)
i <- pos
#for(i in 1:M) {
#print(i)
#initial_list = which(geno[i,]==0)
#Ii = length(initial_list)
Ii <- sum(geno[i,]==0)
#EHH[i,i] = 1
EHH[i] = 1
## left-flank
#cur_list = initial_list
j = i-1
while( j >= 1 ) {
#tmp_list = which(geno[j,]==0)
#cur_list = intersect( cur_list, tmp_list ) #RECURSIVE
#Ij = length(cur_list)
Ij <- sum(colSums(geno[j:i,])==0)
cur.EHH = Ij/Ii
if (is.na(cur.EHH) | cur.EHH < thresh) { break } else {
#EHH[i,j] = cur.EHH
EHH[j] <- cur.EHH
}
j = j-1
}
## right-flank
#cur_list = initial_list
j = i + 1
while( j <= M ) {
#tmp_list = which(geno[j,]==0)
#cur_list = intersect( cur_list, tmp_list )
#Ij = length(cur_list)
Ij <- sum(colSums(geno[i:j,])==0)
cur.EHH = Ij/Ii
if (is.na(cur.EHH) | cur.EHH < thresh) { break } else {
#EHH[i,j] = cur.EHH
EHH[j] <- cur.EHH
}
j = j+1
}
#}
return(EHH)
}
calc_iES.slow <- function(geno,lox) {#function(EHH,lox)
if( nrow(geno) != length(lox) ) { stop("Number of positions given does not agree with number of markers.\n") }
#if( nrow(EHHS) != length(lox) ) { stop("Number of positions given does not agree with number of markers.\n") }
L <- length(lox)
iES <- rep(NA, L)
x = lox[2:L] - lox[1:(L-1)]
#iES <- sapply(X=c(1:L),FUN=calc_IES.new,geno)
for(i in 1:L) {
#included
#started.at=proc.time()
EHHSa <- calc_EHHS.pos(i,geno)
#cat("Finished in",timetaken(started.at),"\n")
#included
y = EHHSa[1:(L-1)] + EHHSa[2:L]
if( !all(is.na(y)) ) {
#y = EHH[i,1:(L-1)] + EHH[i,2:L]
iES[i] = sum(y*x, na.rm=T) / 2
}; rm(y)
}
iES
}
md <- genoChr1[,-c(1,2)]
md[md==2] <- 0 	## 0=homozygous; 1=heterozygous
genoChr1[,-c(1,2)] <- md
#genoChr1[genoChr1==2] <- 0		## 0=homozygous; 1=heterozygous
#modify to have all populations:
pops <- c(3,8,18,33,45,60,64)
#pops <- c(3,8,18)
#lox <- as.numeric(row.names(genoChr1)) #all the SNPs positions in an array
lox <- genoChr1[,2] #/ max(genoChr1[,2]) * 100
p <- 1
Chr_POP <- genoChr1[,pops[p]:(pops[p+1]-1)] #
geno=as.matrix(Chr_POP)
L <- length(lox)
iES <- rep(NA, L)
x = lox[2:L] - lox[1:(L-1)]
head(c)
head(x)
tail(x)
i <- 1
#included
#started.at=proc.time()
EHHSa <- calc_EHHS.pos(i,geno)
head(EHHSa)
EHHSa[1:1000]
EHHSa[1:25]
head(geno)
geno[1:100,]
EHHSa[1:100]
#new file:
file_imputed <- c("/Users/sramos/Desktop/GWAS-EHHS/Tang_script/Window_1.txt_imputed_nrows_10000,txt")
genoChr1 <- data.frame(fread(file_imputed, header=T, na.string="9"))
#new file:
file_imputed <- c("/Users/sramos/Desktop/GWAS-EHHS/Tang_script/Window_1.txt_imputed_nrows_10000.txt")
genoChr1 <- data.frame(fread(file_imputed, header=T, na.string="9"))
md <- genoChr1[,-c(1,2)]
md[md==2] <- 0 	## 0=homozygous; 1=heterozygous
genoChr1[,-c(1,2)] <- md
#modify to have all populations:
pops <- c(3,8,18,33,45,60,64)
#pops <- c(3,8,18)
#lox <- as.numeric(row.names(genoChr1)) #all the SNPs positions in an array
lox <- genoChr1[,2] #/ max(genoChr1[,2]) * 100
Chr_POP <- genoChr1[,pops[p]:(pops[p+1]-1)] #
geno=as.matrix(Chr_POP)
L <- length(lox)
iES <- rep(NA, L)
x = lox[2:L] - lox[1:(L-1)]
i <- 1
#included
#started.at=proc.time()
EHHSa <- calc_EHHS.pos(i,geno)
EHHSa[1:100,]
EHHSa[1:100]
iES_POP <- calc_iES.slow(geno=as.matrix(Chr_POP), lox)
logiiES_POP <- log(iES_POP)
logiiES_POP
logiiES_POP[3000:3200]
logiiES_POP[1:1200]
logiiES_POP[1:1000]
filename <- "../example/Window_1.txt_Results_Tang.txt"
npops <- 6
data.stats <- data.frame(fread(filename, header=T))
setwd <- "/Users/sramos/Desktop/GWAS-EHHS/Tang_script/Tang_functions/Tang_stata/bin/"
filename <- "../example/Window_1.txt_Results_Tang.txt"
npops <- 6
data.stats <- data.frame(fread(filename, header=T))
getwd()
setwd("/Users/sramos/Desktop/GWAS-EHHS/Tang_script/Tang_functions/Tang_stata/bin/")
filename <- "../example/Window_1.txt_Results_Tang.txt"
npops <- 6
data.stats <- data.frame(fread(filename, header=T))
Mb <- data.stats[,2]/1000000
head(data.stats)
col_RsbN <- 1 + npops*2 + (npops*(npops-1)/2)
col_RsbN
data_stats <- data.frame(fread(filename, header=T))
Mb <- data_stats[,2]/1000000
k <- 1
col_RsbN <- 1 + npops*2 + (npops*(npops-1)/2)
lnRsb <- data.frame(Mb,data_stats[,col_RsbN+k])
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2], col="green", main="Rsb along chromosome", xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2, ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
lines(lnRsb[lnRsb[,2]<0,1] ,lnRsb[lnRsb[,2]<0,2] , col="red"  ,pch=10, type="p",cex=.2)
abline(h=0, col=1)
abline(h=3,col="black", lty=2)
lnRsb
max(lnRsbN[,2])
max(lnRsb[,2])
max(lnRsb[,2],na.rm=T)
min(lnRsb[,2],na.rm=T)
setwd("/Users/sramos/Desktop/GWAS-EHHS/Tang_script/Tang_functions/Tang_stata/bin/")
filename <- "../example/Window_1.txt_Results_Tang.txt"
npops <- 6
data_stats <- data.frame(fread(filename, header=T))
Mb <- data_stats[,2]/1000000
k <- 1
col_RsbN <- 1 + npops*2 + (npops*(npops-1)/2)
lnRsb <- data.frame(Mb,data_stats[,col_RsbN+k])
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2],
col="green", main=sprintf("Rsb along chromosome: POP%d vs POP%d",i,j),
xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2,
ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
col_RsbN <- 1 + npops*2 + (npops*(npops-1)/2)
lnRsb <- data.frame(Mb,data_stats[,col_RsbN+k])
filter_rows <- apply(lnRsb,c(1,2),is.na)
filter_rows <- apply(filter_rows,1,sum)
Chr_both <- lnRsb[!filter_rows,]
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2],
col="green", main=sprintf("Rsb along chromosome: POP%d vs POP%d",i,j),
xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2,
ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
filter_rows
filter_rows <- apply(lnRsb,c(1,2),is.na)
filter_rows
filter_rows <- apply(filter_rows,1,sum)
filter_rows
sum(filter_rows)
lnRsb <- lnRsb[!filter_rows,]
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2],
col="green", main=sprintf("Rsb along chromosome: POP%d vs POP%d",i,j),
xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2,
ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
i <- 1
j <- 2
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2],
col="green", main=sprintf("Rsb along chromosome: POP%d vs POP%d",i,j),
xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2,
ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
lines(lnRsb[lnRsb[,2]<0,1] ,lnRsb[lnRsb[,2]<0,2] , col="red"  ,pch=10, type="p",cex=.2)
abline(h=0, col=1)
abline(h=3,col="black", lty=2)
abline(h=-3,col="black", lty=2)
times.diff <- log(20)
head(lnRsb)
tail(lox)
plot(lnRsb[,1])
Mb <- data_stats[,1]/1000000
k <- 1
col_RsbN <- 1 + npops*2 + (npops*(npops-1)/2)
lnRsb <- data.frame(Mb,data_stats[,col_RsbN+k])
filter_rows <- apply(lnRsb,c(1,2),is.na)
filter_rows <- apply(filter_rows,1,sum)
lnRsb <- lnRsb[!filter_rows,]
plot (lnRsb[lnRsb[,2]>=0,1],lnRsb[lnRsb[,2]>=0,2],
col="green", main=sprintf("Rsb along chromosome: POP%d vs POP%d",i,j),
xlab="Chromosome Position Mbp", ylab="ln(Rsb)",pch=10, type="p",cex=.2,
ylim=c(min(lnRsb[,2]),max(lnRsb[,2])), xlim=c(min(lnRsb[,1]),max(lnRsb[,1])))
lines(lnRsb[lnRsb[,2]<0,1] ,lnRsb[lnRsb[,2]<0,2] , col="red"  ,pch=10, type="p",cex=.2)
abline(h=0, col=1)
abline(h=times.diff,col="black", lty=2)
abline(h=-times.diff,col="black", lty=2)
